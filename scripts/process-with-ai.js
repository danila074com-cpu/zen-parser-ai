// scripts/process-with-ai.js - –†–ê–ë–û–ß–ê–Ø AI –û–ë–†–ê–ë–û–¢–ö–ê
const { OpenAI } = require('openai');
const fs = require('fs').promises;
const path = require('path');
const ExcelJS = require('exceljs');

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

const AI_MODEL = "gpt-3.5-turbo";

console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –†–ê–ë–û–ß–£–Æ AI –æ–±—Ä–∞–±–æ—Ç–∫—É...');

async function processArticles() {
  try {
    if (!process.env.OPENAI_API_KEY) {
      console.log('‚ùå OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return;
    }

    const inputPath = path.join(__dirname, '../results/–°—Ç–∞—Ç—å–∏ –î–∑–µ–Ω/–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å/–ù–∞—Ä–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–µ—à—å_articles.xlsx');
    
    console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Å–æ —Å—Ç–∞—Ç—å—è–º–∏...');
    await fs.access(inputPath);
    console.log('‚úÖ –§–∞–π–ª —Å–æ —Å—Ç–∞—Ç—å–µ–π –Ω–∞–π–¥–µ–Ω!');

    // –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(inputPath);
    const worksheet = workbook.getWorksheet('Articles');
    const totalArticles = worksheet.rowCount - 1;
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${totalArticles}`);

    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const outputDir = path.join(__dirname, '../processed');
    await fs.mkdir(outputDir, { recursive: true });
    const outputPath = path.join(outputDir, '—Ä–∞–±–æ—á–∏–µ_—Å—Ç–∞—Ç—å–∏.xlsx');
    
    const newWorkbook = new ExcelJS.Workbook();
    const newWorksheet = newWorkbook.addWorksheet('–†–∞–±–æ—á–∏–µ —Å—Ç–∞—Ç—å–∏');

    // –°—Ç–æ–ª–±—Ü—ã
    newWorksheet.columns = [
      { header: '‚Ññ', key: 'number', width: 5 },
      { header: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫', key: 'original_title', width: 35 },
      { header: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫', key: 'unique_title', width: 35 },
      { header: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç', key: 'original_text', width: 80 },
      { header: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç', key: 'unique_text', width: 80 },
      { header: '–û—Ä–∏–≥. —Å–ª–æ–≤', key: 'original_words', width: 12 },
      { header: '–£–Ω–∏–∫. —Å–ª–æ–≤', key: 'unique_words', width: 12 },
      { header: '–†–∞–∑–Ω–∏—Ü–∞', key: 'difference', width: 15 },
      { header: '–°—Ç–∞—Ç—É—Å', key: 'status', width: 20 }
    ];

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 1 —Å—Ç–∞—Ç—å—é
    let processedCount = 0;
    const maxArticles = 1;

    for (let i = 2; i <= Math.min(worksheet.rowCount, maxArticles + 1); i++) {
      const row = worksheet.getRow(i);
      const originalTitle = row.getCell(1).value;
      const originalText = row.getCell(2).value;
      
      if (!originalTitle || !originalText) continue;

      const originalWordCount = originalText.split(/\s+/).length;
      console.log(`\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: "${originalTitle.substring(0, 50)}..."`);
      console.log(`   üìä –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º: ${originalWordCount} —Å–ª–æ–≤`);

      try {
        // –®–ê–ì 1: –°–û–ó–î–ê–ï–ú –£–ù–ò–ö–ê–õ–¨–ù–´–ô –ó–ê–ì–û–õ–û–í–û–ö
        console.log('   üí° –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫...');
        
        const titlePrompt = `–ü—Ä–∏–¥—É–º–∞–π –Ω–æ–≤—ã–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞—Ç—å–∏. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: "${originalTitle}"`;
        
        const titleResponse = await openai.chat.completions.create({
          model: AI_MODEL,
          messages: [{ role: "user", content: titlePrompt }],
          max_tokens: 100,
          temperature: 0.7
        });

        const uniqueTitle = titleResponse.choices[0].message.content.replace(/["']/g, '').trim();

        // –®–ê–ì 2: –ü–ï–†–ï–ü–ò–°–´–í–ê–ï–ú –ü–û–õ–ù–´–ô –¢–ï–ö–°–¢
        console.log('   ‚úçÔ∏è –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...');
        
        const textPrompt = `
–ü–µ—Ä–µ–ø–∏—à–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, —Å–æ—Ö—Ä–∞–Ω—è—è –æ—Å–Ω–æ–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ —Å–º—ã—Å–ª, –Ω–æ –∏–∑–º–µ–Ω–∏–≤ –∏–º–µ–Ω–∞, –¥–µ—Ç–∞–ª–∏ –∏ –¥–∏–∞–ª–æ–≥–∏. 
–°–æ—Ö—Ä–∞–Ω–∏ –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–º —Ç–µ–∫—Å—Ç–∞ (${originalWordCount} —Å–ª–æ–≤).

–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏:
"${originalText}"

–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
`;

        const textResponse = await openai.chat.completions.create({
          model: AI_MODEL,
          messages: [{ role: "user", content: textPrompt }],
          max_tokens: 4000,
          temperature: 0.8
        });

        const uniqueText = textResponse.choices[0].message.content;
        const uniqueWordCount = uniqueText.split(/\s+/).length;
        
        const diffPercent = Math.round((uniqueWordCount - originalWordCount) / originalWordCount * 100);
        const volumeStatus = Math.abs(diffPercent) <= 15 ? '‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω' : `‚ö†Ô∏è ${diffPercent}%`;

        console.log(`   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${originalWordCount} ‚Üí ${uniqueWordCount} —Å–ª–æ–≤ (${volumeStatus})`);
        console.log(`   üéØ –ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: ${uniqueTitle}`);

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
        newWorksheet.addRow({
          number: i - 1,
          original_title: originalTitle,
          unique_title: uniqueTitle,
          original_text: originalText, // –ü–û–õ–ù–´–ô –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
          unique_text: uniqueText, // –ü–û–õ–ù–´–ô —Ç–µ–∫—Å—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
          original_words: originalWordCount,
          unique_words: uniqueWordCount,
          difference: volumeStatus,
          status: '‚úÖ –£—Å–ø–µ—à–Ω–æ'
        });

        processedCount++;
        console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ! –°–æ–∑–¥–∞–Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç—å—è.`);

        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 2000));

      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    await newWorkbook.xlsx.writeFile(outputPath);
    
    console.log('\nüéâ ====== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ë–†–ê–ë–û–¢–ö–ò ======');
    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: ${processedCount}`);
    console.log(`üìÅ –§–∞–π–ª: ${outputPath}`);

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
processArticles();